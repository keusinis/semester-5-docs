openapi: 3.0.3
info:
  title: "PoS application API contracts"
  version: 1.0.0
  description: |
    This API uses JWT-based Bearer authentication 
    Users must log in via `/login` to obtain an access token
    The token must be included in all subsequent requests using the Authorization header:
    
      Authorization: Bearer <your_token_here>
tags:
  - name: Authentication
  - name: User Management
  - name: Organization
  - name: Inventory
  - name: Tax
  - name: Discount
  - name: MenuItem
  - name: MenuService
  - name: Order
  - name: Appointment
 
servers:
  - url: https://apipos-system.com

security:
  - BearerAuth: []

paths:

  /login:
    post:
      summary: Authenticate a user and issue a JWT token
      security: []
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: User successfully authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  username:
                    type: string
                    description: Returned for UI display
                  accessFlag:
                    type: number
                    description: Returned for UI display
        '400':
          description: Bad request
        '401':
          description: Invalid username or password
        '500':
          description: Internal server error
          
  /logout:
    post:
      summary: Log out the currently authenticated user
      security: []
      tags:
        - Authentication
      responses:
        '204':
          description: User successfully logged out
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error
  
  /employees/add:
    post:
      summary: Create a new employee under an organization
      tags:
        - User Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - accessFlag
                - status
                - organizationId
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
                accessFlag:
                  type: number
                status:
                  type: string
                organizationId:
                  type: string
      responses:
        '201':
          description: Employee successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  employeeId:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error
          
  /employees/{employeeId}/edit:
    put:
      summary: Update employee account details
      description: Modify details of an existing employee account
      tags:
        - User Management
      parameters:
        - in: path
          name: employeeId
          required: true
          schema:
            type: string
          description: The ID of the employee to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
                accessFlag:
                  type: number
                status:
                  type: string
                organizationId:
                  type: string
      responses:
        '200':
          description: Employee details successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  employeeId:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error
          
  /employees/{organizationId}:
    get:
      summary: Retrieve all employees in a specific organization
      tags:
        - User Management
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: The ID of the organization to fetch employees for
      responses:
        '200':
          description: List of employees successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    employeeId:
                      type: string
                    username:
                      type: string
                    accessFlag:
                      type: number
                    status:
                      type: string
                    timestamp:
                      type: string
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error

  /organizations:
    get:
      summary: Retrieve a paginated list of organizations Accessible to super users
      tags:
        - Organization
      parameters:
        - name: page
          in: query
          description: Page number to retrieve (Numbered from 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of organizations per page
          required: false
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: A paginated list of organizations
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalItems:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Organization'
                    nullable: false
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error
 
    post:
      summary: Create a new organization in the POS system Accessible to super users
      tags:
        - Organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateRequest'
      responses:
        '201':
          description: Organization successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error
 
  /organizations/{organizationId}:
    get:
      summary: Retrieve detailed information about a specific organization
      tags:
        - Organization
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Bad Request - Invalid input or missing required fields
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Organization not found
          
    put:
      summary: Update an existing organization's data such as name, contact info, or address Accessible to super users or business owners
      tags:
        - Organization
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdateRequest'
      responses:
        '200':
          description: Organization successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Organization not found
        '500':
          description: Internal server error
 
  /inventory:
    get:
      summary: Get all inventory items for the authenticated organization
      tags:
        - Inventory
      responses:
        '200':
          description: List of inventory items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error

    post:
      summary: Create a new inventory item for the authenticated organization
      tags:
        - Inventory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        '201':
          description: Inventory item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error
 
  /inventory/{inventoryItemId}:
    get:
      summary: Get a specific inventory item for the authenticated organization
      tags:
        - Inventory
      parameters:
        - name: inventoryItemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Inventory item details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not Found
        '500':
          description: Internal server error

    put:
      summary: Update a specific inventory item for the authenticated organization
      tags:
        - Inventory
      parameters:
        - name: inventoryItemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        '200':
          description: Inventory item updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not Found
        '500':
          description: Internal server error

  /taxes:
    get:
      summary: List all taxes
      tags:
        - Tax
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal Server Error

    post:
      summary: Create a new tax
      tags:
        - Tax
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxCreate'
      responses:
        '201':
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error

  /taxes/{taxId}:
    get:
      summary: Get tax by ID
      tags:
        - Tax
      parameters:
        -  name: taxId
           in: path
           required: true
           schema:
             type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal Server Error

    put:
      summary: Update tax by ID
      tags:
        - Tax
      parameters:
        -  name: taxId
           in: path
           required: true
           schema:
             type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxCreate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal Server Error

  /discounts:
    get:
      summary: List all discounts
      tags:
        - Discount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Discount'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal Server Error

    post:
      summary: Create a new discount
      tags:
        - Discount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountCreate'
      responses:
        '201':
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal Server Error

  /discounts/{discountId}:
    get:
      summary: Get discount by ID
      tags:
        - Discount
      parameters:
      -  name: discountId
         in: path
         required: true
         schema:
           type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal Server Error

    put:
      summary: Update a discount
      tags:
        - Discount
      parameters:
      -  name: discountId
         in: path
         required: true
         schema:
           type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountCreate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal Server Error

  /giftCards:
    get:
      summary: List all gift cards
      tags:
        - GiftCard
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GiftCard'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal Server Error

    post:
      summary: Create a new gift card
      tags:
        - GiftCard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftCardCreate'
      responses:
        '201':
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal Server Error

  /giftCards/{giftCardId}:
    get:
      summary: Get gift card by ID
      tags:
        - GiftCard
      parameters:
        -  name: giftCardId
           in: path
           required: true
           schema:
             type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCard'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal Server Error

    put:
      summary: Update gift card balance
      tags:
        - GiftCard
      parameters:
        -  name: giftCardId
           in: path
           required: true
           schema:
             type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftCardUpdateBalance'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCard'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal Server Error

  /orders/{orderId}/payments:
    post:
      summary: Create a new payment for a specific order
      tags:
        - Payment
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreateRequest'
      responses:
        '201':
          description: Payment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '409':
          description: Duplicate or invalid payment request
        '500':
          description: Internal server error
 
    get:
      summary: Get all payments for a specific order
      tags:
        - Payment
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of payments for the order
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '400':
          description: Bad Request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Order not found
        '500':
          description: Internal server error

  /orders/{orderId}/refund:
    post:
      summary: Create a refund for a specific order’s payment
      tags:
        - Refund
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundCreateRequest'
      responses:
        '201':
          description: Refund created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
        '400':
          description: Invalid request or refund amount
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Payment not found or refund not allowed
        '500':
          description: Internal server error

  /menuItem:
    get:
      summary: Retrieve all/filtered MenuItems, that belong to an organization
      tags:
        - MenuItem
      responses:
        '200':
          description: Organization MenuItems retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemArray'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error
    
    post:
      summary: Create a MenuItem in the database
      tags:
        - MenuItem
      requestBody:
        description: MenuItem object, without menuItemId, timestamps and variationIds, since menuItemId, timestamps and variationIds will be assigned in back-end
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
      responses:
        '201':
          description: New MenuItem was created
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error

  /menuItem/{menuItemId}:
    get:
      summary: Retrieve specified MenuItem
      tags:
        - MenuItem
      parameters:
        - in: path
          name: menuItemId
          required: true
          schema:
            type: string
          description: MenuItem identifier
      responses:
        '200':
          description: Organization MenuItems retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal server error
  
    put:
      summary: Update specified MenuItem
      tags:
        - MenuItem
      parameters:
        - in: path
          name: menuItemId
          required: true
          schema:
            type: string
          description: MenuItem identifier
      requestBody:
        description: MenuItem object can have variations without variationIds, since variationId will be assigned in back-end
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
      responses:
        '200':
          description: MenuItem updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal server error
          
  /menuItem/{menuItemId}/image:
    get:
      summary: Retrieve specified MenuItem image
      tags:
        - MenuItem
      parameters:
        - in: path
          name: menuItemId
          required: true
          schema:
            type: string
          description: MenuItem identifier
      responses:
        '200':
          description: MenuItem image retrieved
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Image'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal server error
    
    put:
      summary: Update specified MenuItem image
      tags:
        - MenuItem
      parameters:
        - in: path
          name: menuItemId
          required: true
          schema:
            type: string
          description: MenuItem identifier
      requestBody:
        description: Image of MenuItem
        required: true
        content:
          image/png:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          description: MenuItem image updated
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal server error
  
  /menuService:
    get:
      summary: Retrieve all MenuItems, that belong to an organization
      tags:
        - MenuService
      responses:
        '200':
          description: Organization MenuItems retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuServiceArray'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error
    
    post:
      summary: Create a MenuItem in the database
      tags:
        - MenuService
      requestBody:
        description: MenuItem object, without menuItemId, timestamps and variationIds, since menuItemId, timestamps and variationIds will be assigned in back-end
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
      responses:
        '201':
          description: New MenuItem was created
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error

  /menuService/{menuServiceId}:
    get:
      summary: Retrieve specified MenuService
      tags:
        - MenuService
      parameters:
        - in: path
          name: menuServiceId
          required: true
          schema:
            type: string
          description: MenuService identifier
      responses:
        '200':
          description: Organization MenuServices retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuService'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal server error
  
    put:
      summary: Update specified MenuService
      tags:
        - MenuService
      parameters:
        - in: path
          name: menuServiceId
          required: true
          schema:
            type: string
          description: MenuService identifier
      requestBody:
        description: MenuService object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuService'
      responses:
        '200':
          description: MenuService updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuService'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal server error
    
  /menuService/{menuServiceId}/image:
    get:
      summary: Retrieve specified MenuServices image
      tags:
        - MenuService
      parameters:
        - in: path
          name: menuServiceId
          required: true
          schema:
            type: string
          description: MenuService identifier
      responses:
        '200':
          description: MenuService image retrieved
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Image'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal server error
    
    put:
      summary: Update specified MenuServices image
      tags:
        - MenuService
      parameters:
        - in: path
          name: menuServiceId
          required: true
          schema:
            type: string
          description: MenuService identifier
      requestBody:
        description: Image of MenuService
        required: true
        content:
          image/png:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          description: MenuService image updated
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal server error
  
  /orders:
    get:
      summary: Retrieve all orders, that belong to an organization
      tags:
        - Order
      responses:
        '200':
          description: Organization orders retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderArray'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error

    post:
      summary: Create a closed order in the database
      tags:
        - Order
      requestBody:
        description: Order object, without orderId, timestamp and orderItemIds, since orderId, timestamp and orderItemIds will be assigned in back-end
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: New order was created
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error

  /orders/{orderId}:
    get:
      summary: Retrieve specified Order
      tags:
        - Order
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
          description: Order identifier
      responses:
          '200':
            description: Order retrieved
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Order'
          '400':
            description: Bad request
          '401':
            description: Missing or invalid authentication token
          '404':
            description: Not found
          '500':
            description: Internal server error

  /appointments:
    get:
      summary: Retrieve all appointments, that belong to an organization
      tags:
        - Appointment
      responses:
        '200':
          description: Organization appointments retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentArray'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error

    post:
      summary: Create an appointment in the database
      tags:
        - Appointment
      requestBody:
        description: Appointment object, without appointmentId, since appointmentId will be assigned in back-end
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '201':
          description: New appointment was created
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '500':
          description: Internal server error

  /appointments/{appointmentId}:
    get:
      summary: Retrieve specified Appointment
      tags:
        - Appointment
      parameters:
        - in: path
          name: appointmentId
          required: true
          schema:
            type: string
          description: Appointment identifier
      responses:
          '200':
            description: Appointment retrieved
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Appointment'
          '400':
            description: Bad request
          '401':
            description: Missing or invalid authentication token
          '404':
            description: Not found
          '500':
            description: Internal server error

    put:
      summary: Update specified Appointment
      tags:
        - Appointment
      parameters:
        - in: path
          name: appointmentId
          required: true
          schema:
            type: string
          description: Appointment identifier
      requestBody:
        description: Appointment object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '200':
          description: Appointment updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '400':
          description: Bad request
        '401':
          description: Missing or invalid authentication token
        '404':
          description: Not found
        '500':
          description: Internal server error


components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Organization:
      type: object
      properties:
        organizationId:
          type: string
          readOnly: true
        ownerId:
          type: string
        name:
          type: string
        organizationType:
          type: string
        address:
          type: string
        emailAddress:
          type: string
        phoneNumber:
          type: string
 
    OrganizationCreateRequest:
      type: object
      required:
        - name
        - organizationType
        - address
        - emailAddress
        - phoneNumber
      properties:
        name:
          type: string
        organizationType:
          type: string
        address:
          type: string
        emailAddress:
          type: string
        phoneNumber:
          type: string
 
    OrganizationUpdateRequest:
      type: object
      properties:
        ownerId:
          type: string
        name:
          type: string
        organizationType:
          type: string
        address:
          type: string
        emailAddress:
          type: string
        phoneNumber:
          type: string
 
    InventoryItem:
      type: object
      required:
        - name
        - quantity
      properties:
        inventoryItemId:
          type: string
          readOnly: true
        name:
          type: string
        quantity:
          type: integer
        status:
          type: string
          enum: [
            Active,
            Inactive,
            Unavailable
          ]
  
    TaxCreate:
      type: object
      properties:
        taxAmount:
          type: number
        taxType:
          type: string
      required:
        - taxAmount
        - taxType

    Tax:
      type: object
      properties:
        taxId:
          type: string
        amount:
          type: number
        numberType:
          type: string
          enum: [
            flat,
            percentage
          ]
        status:
          type: string
          enum: [
            Active,
            Inactive,
            Unavailable
          ]
    
    DiscountCreate:
      type: object
      properties:
        percentage:
          type: number
        applicableTo:
          type: string
        validFrom:
          type: string
          format: date-time
        validUntil:
          type: string
          format: date-time
      required:
        - percentage
        - applicableTo
        - validFrom
        - validUntil

    Discount:
      type: object
      properties:
        discountId:
          type: string
        percentage:
          type: number
        applicableTo:
          type: string
        validFrom:
          type: string
          format: date-time
          readOnly: true
        validUntil:
          type: string
          format: date-time
          readOnly: true
        status:
          type: string
          enum: [
            Active,
            Inactive,
            Unavailable
          ]

    GiftCardCreate:
      type: object
      properties:
        balance:
          type: number
        currency:
          type: string
          enum: [
            euro,
            dollar,
            ...
          ]
        validUntil:
          type: string
          format: date-time
      required:
        - balance
        - validUntil
        - currency

    GiftCardUpdateBalance:
      type: object
      properties:
        balance:
          type: number
      required:
        - balance

    GiftCard:
      type: object
      properties:
        giftCardId:
          type: string
        balance:
          type: number
        currency:
          type: string
          enum: [
            euro,
            dollar,
            ...
          ]
        validUntil:
          type: string
          format: date-time
          readOnly: true

    PaymentCreateRequest:
      type: object
      required:
        - amount
        - currency
      properties:
        amount:
          type: number
        currency:
          type: string
          enum: [
            euro,
            dollar,
            ...
          ]
        paymentMethodId:
          type: string
          description: Stripe Payment Method ID (tokenized client-side)

    Payment:
      type: object
      properties:
        paymentId:
          type: string
        orderId:
          type: string
        amount:
          type: number
        currency:
          type: string
          enum: [
            euro,
            dollar,
            ...
          ]
        paymentStatus:
          type: string
          enum: [
            pending,
            succeeded,
            failed,
            refunded
          ]
        refundStatus:
          type: string
          enum: [
            unrefunded,
            pending,
            succeeded,
            failed
          ]
        stripePaymentId:
          type: string
        timestamp:
          type: string
          format: date-time
          description: Auto-generated timestamp when the item was created or last updated
          readOnly: true

    RefundCreateRequest:
      type: object
      properties:
        paymentId:
          type: string
        amount:
          type: number
      required:
        - paymentId

    Refund:
      type: object
      properties:
        refundId:
          type: string
        paymentId:
          type: string
        amount:
          type: number
        status:
          type: string
          enum: [
            pending,
            succeeded,
            failed
          ]
        timestamp:
          type: string
          format: date-time
          description: Auto-generated timestamp when the item was created or last updated
          readOnly: true

    MenuItem:
      type: object
      properties:
        menuItemId:
          type: string
          description: MenuItem identifier
        name:
          type: string
          description: Name of MenuItem
        category:
          type: string
          description: Category of MenuItem
        status:
          type: string
          enum: [
            Active,
            Inactive,
            Unavailable
          ]
          description: Describes MenuItem activity/availability
        timestamp:
          type: string
          format: date-time
          description: Timestamp, indicating when MenuItem was created/updated
          readOnly: true
        variations:
          type: array
          description: Variations of a MenuItem
          minimum: 1
          items:
            type: object
            properties:
              variationId:
                type: string
                description: Variation identifier
              name:
                type: string
                description: Name of Variation
              price:
                type: number
                description: Cost of Variation
              status: 
                type: string
                enum: [
                  Active,
                  Inactive,
                  Unavailable
                ]
              timestamp:
                type: string
                format: date-time
                description: Timestamp, indicating when Variation was created/updated
                readOnly: true
              inventoryItems:
                type: array
                description: InventoryItems, necessary for Variation
                items: 
                  type: object
                  properties:
                    inventoryItemId:
                      type: string
                      description: InventoryItem identifier
                    quantity:
                      type: integer
                      minimum: 1
                      description: Amount of InventoryItem, necessary for Variation
                  required:
                    - inventoryItemId
                    - quantity
            required:
              - name
              - price
              - status
              - inventoryItems
      required:
        - name
        - image
        - status
        - variations
        
    MenuItemArray:
      type: array
      items:  
        type: object
        properties:
          menuItemId:
            type: string
            description: MenuItem identifier
          name:
            type: string
            description: Name of MenuItem
          category:
            type: string
            description: Category of MenuItem
        required:
          - menuItemId
          - name
          - category
    
    MenuService:
      type: object
      properties:
        menuServiceId:
          type: string
          description: MenuService identifier
        name:
          type: string
          description: Name of MenuService
        category:
          type: string
          description: Category of MenuService
        duration:
          type: string
          description: Duration of MenuService
        price:
          type: number
          description: Price of MenuService
        status:
          type: string
          enum: [
            Active,
            Inactive,
            Unavailable
          ]
        timestamp:
          type: string
          format: date-time
          description: Timestamp, indicating when MenuService was created/updated
          readOnly: true
      required:
        - name
        - image
        - category
        - duration
        - price
        - status
        
    MenuServiceArray:
      type: array
      items:  
        type: object
        properties:
          menuServiceId:
            type: string
            description: MenuService identifier
          name:
            type: string
            description: Name of MenuItem
          category:
            type: string
            description: Category of MenuItem
        required:
          - menuServiceId
          - name
          - category
    
    Image:
      type: string
      format: binary
      description: Image sent in Base64 format
    
    Order:
      type: object
      properties:
        orderId:
          type: string
          description: Order identifier
        timestamp:
          type: string
          format: date-time
          description: Timestamp, indicating when order was created/updated
          readOnly: true
        orderItems:
          type: array
          items:
            type: object
            minimum: 1
            properties:
              id:
                type: string
                description: OrderItem identifier
              quantity:
                type: number
                minimum: 1
                description: Quantity of OrderItem
              variationId:
                type: string
                description: Identifier of an item variation, that was selected in the order
            required:
              - quantity
              - variationId
      required: 
        - orderItems

    OrderArray:
      type: array
      items:  
        type: object
        properties:
          orderId:
            type: string
            description: OrderItem identifier
          timestamp:
            type: string
            format: date-time
            description: Timestamp, indicating when Order was created/updated
            readOnly: true
        required:
          - orderId
          - timestamp

    Appointment:
      type: object
      properties:
        appointmentId:
          type: string
          description: Appointment identifier
        customerName:
          type: string
          description: Name of customer
        customerPhone:
          type: string
          description: Phone number of customer
        timestamp:
          type: string
          format: date-time
          description: Timestamp, indicating when Appointment was created/updated
          readOnly: true
        services:
          type: array
          minimum: 1
          items:
            type: object
            properties:
              menuServiceId:
                type: string
                description: MenuService identifier
              employeeId:
                type: string
                description: Employee identifier
              startTime:
                type: string
                format: date-time
                description: Time, when MenuService begins
            required:
              - menuServiceId
              - employeeId
              - startTime
      required:
        - customerName
        - customerPhone
        - services

    AppointmentArray:
      type: array
      items:
        type: object
        properties:
          appointmentId:
            type: string
            description: Appointment identifier
          timestamp:
            type: string
            format: date-time
            description: Timestamp, indicating when Appointment was created/updated
            readOnly: true
        required:
          - appointmentId
          - timestamp

  headers:
    Location:
      description: URL of the newly created resource
      schema:
        type: string
        format: uri
